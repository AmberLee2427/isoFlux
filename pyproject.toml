[build-system]
requires = [
  "setuptools>=62.1",
  "setuptools_scm[toml]>=8.0.0",
  "wheel",
  "extension-helpers",
  "numpy>=1.25",
  "cython"
]
build-backend = "setuptools.build_meta"

[project]
name = "isoflux"
description = "A fast, lightweight, isochrone inference package"
requires-python = ">=3.9"
readme = { file = "README.rst", content-type = "text/x-rst" }
license = { file = "licenses/MIT.rst" }
authors = [
  { name = "Amber Malpas", email = "malpas.1@osu.edu" },
]
dependencies = []
dynamic = ["version"]

[project.optional-dependencies]
test = [
    "pytest",
    "pytest-doctestplus",
    "pytest-cov"
]
docs = [
    "sphinx",
    "sphinx-automodapi",
]
[project.urls]
repository = "https://github.com/AmberLee2427/isoFlux.git"

[tool.setuptools]
zip-safe = false
include-package-data = true

[tool.setuptools.packages.find]
include = ["isoflux*"]
exclude = ["isoflux._dev*"]

[tool.setuptools_scm]
version_file = "isoflux/_version.py"

[tool.pytest.ini_options]
testpaths = [
  "isoflux",
  "docs",
]
doctest_plus = "enabled"
text_file_format = "rst"
addopts = "--doctest-rst"
norecursedirs = ["isoflux[\\/]_dev"]

[tool.coverage.run]
omit = [
 "isoflux/__init*",
 "isoflux/conftest.py",
 "isoflux/*setup_package*",
 "isoflux/tests/*",
 "isoflux/*/tests/*",
 "isoflux/extern/*",
 "isoflux/version*",
 "*/isoflux/__init*",
 "*/isoflux/conftest.py",
 "*/isoflux/*setup_package*",
 "*/isoflux/tests/*",
 "*/isoflux/*/tests/*",
 "*/isoflux/extern/*",
 "*/isoflux/version*",
]

[tool.coverage.report]
exclude_lines = [
  # Have to re-enable the standard pragma
  "pragma: no cover",
  # Don't complain about packages we have installed
  "except ImportError",
  # Don't complain if tests don't hit assertions
  "raise AssertionError",
  "raise NotImplementedError",
  # Don't complain about script hooks
  "def main(.*):",
  # Ignore branches that don't pertain to this version of Python
  "pragma: py{ignore_python_version}",
  # Don't complain about IPython completion helper
  "def _ipython_key_completions_",
  # typing.TYPE_CHECKING is False at runtime
  "if TYPE_CHECKING:",
  # Ignore typing overloads
  "@overload",
]
